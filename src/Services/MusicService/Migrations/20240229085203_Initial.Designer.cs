// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Musdis.MusicService.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MusicService.Migrations
{
    [DbContext(typeof(MusicServiceDbContext))]
    [Migration("20240229085203_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Musdis.MusicService.Models.Artist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ArtistTypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("CoverUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ArtistTypeId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.ArtistType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("ArtistTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("20af1149-c5c6-40e2-868e-755dff6be93d"),
                            Name = "Band",
                            Slug = "band"
                        },
                        new
                        {
                            Id = new Guid("84e328a2-56d2-4099-8c34-c12c41056fef"),
                            Name = "Musician",
                            Slug = "musician"
                        });
                });

            modelBuilder.Entity("Musdis.MusicService.Models.ArtistUser", b =>
                {
                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ArtistId", "UserId");

                    b.ToTable("ArtistUsers");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.Release", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CoverUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ReleaseTypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ReleaseTypeId");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Releases");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.ReleaseArtist", b =>
                {
                    b.Property<Guid>("ReleaseId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uuid");

                    b.HasKey("ReleaseId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("ReleaseArtists");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.ReleaseType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("ReleaseTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a841d69b-56a5-4b80-8ad9-78b32ba5c124"),
                            Name = "EP",
                            Slug = "ep"
                        },
                        new
                        {
                            Id = new Guid("53b200e5-fcc6-4528-a2ab-3c0ad6a4065a"),
                            Name = "Album",
                            Slug = "album"
                        },
                        new
                        {
                            Id = new Guid("c7f13388-a018-493c-9ff8-03c575167ee9"),
                            Name = "Single",
                            Slug = "single"
                        },
                        new
                        {
                            Id = new Guid("983a3e85-3c5c-46ac-b067-6824ed955fbb"),
                            Name = "Soundtrack",
                            Slug = "soundtrack"
                        },
                        new
                        {
                            Id = new Guid("3558d638-e3cf-4a4a-aadf-ce216afd670a"),
                            Name = "Other",
                            Slug = "other"
                        });
                });

            modelBuilder.Entity("Musdis.MusicService.Models.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a758b7a5-8fc1-4a8f-ad0b-93b7805588bc"),
                            Name = "Lo-Fi",
                            Slug = "lo-fi"
                        },
                        new
                        {
                            Id = new Guid("b3a4fb15-15f1-4317-8283-d8a02e6ed4e3"),
                            Name = "Shoegaze",
                            Slug = "shoegaze"
                        },
                        new
                        {
                            Id = new Guid("c1fd5974-8c54-4134-874f-c935a8cd5d04"),
                            Name = "Rock",
                            Slug = "rock"
                        },
                        new
                        {
                            Id = new Guid("c2372919-3a7e-4bca-b9dd-00dc108f5325"),
                            Name = "Pop",
                            Slug = "pop"
                        },
                        new
                        {
                            Id = new Guid("a6370b10-0b0b-4ba2-9480-cd18621f2d25"),
                            Name = "Electronic",
                            Slug = "Electronic"
                        });
                });

            modelBuilder.Entity("Musdis.MusicService.Models.TagTrack", b =>
                {
                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("uuid");

                    b.HasKey("TagId", "TrackId");

                    b.HasIndex("TrackId");

                    b.ToTable("TagTracks");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ReleaseId")
                        .HasColumnType("uuid");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ReleaseId");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.TrackArtist", b =>
                {
                    b.Property<Guid>("TrackId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uuid");

                    b.HasKey("TrackId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("TrackArtists");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.Artist", b =>
                {
                    b.HasOne("Musdis.MusicService.Models.ArtistType", "ArtistType")
                        .WithMany("Artists")
                        .HasForeignKey("ArtistTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArtistType");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.ArtistUser", b =>
                {
                    b.HasOne("Musdis.MusicService.Models.Artist", "Artist")
                        .WithMany("ArtistUsers")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.Release", b =>
                {
                    b.HasOne("Musdis.MusicService.Models.ReleaseType", "ReleaseType")
                        .WithMany("Releases")
                        .HasForeignKey("ReleaseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReleaseType");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.ReleaseArtist", b =>
                {
                    b.HasOne("Musdis.MusicService.Models.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Musdis.MusicService.Models.Release", "Release")
                        .WithMany()
                        .HasForeignKey("ReleaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Release");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.TagTrack", b =>
                {
                    b.HasOne("Musdis.MusicService.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Musdis.MusicService.Models.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.Track", b =>
                {
                    b.HasOne("Musdis.MusicService.Models.Release", "Release")
                        .WithMany("Tracks")
                        .HasForeignKey("ReleaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Release");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.TrackArtist", b =>
                {
                    b.HasOne("Musdis.MusicService.Models.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Musdis.MusicService.Models.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.Artist", b =>
                {
                    b.Navigation("ArtistUsers");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.ArtistType", b =>
                {
                    b.Navigation("Artists");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.Release", b =>
                {
                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.ReleaseType", b =>
                {
                    b.Navigation("Releases");
                });
#pragma warning restore 612, 618
        }
    }
}
