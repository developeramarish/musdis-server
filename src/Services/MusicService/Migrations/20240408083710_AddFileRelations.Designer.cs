// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Musdis.MusicService.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MusicService.Migrations
{
    [DbContext(typeof(MusicServiceDbContext))]
    [Migration("20240408083710_AddFileRelations")]
    partial class AddFileRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Musdis.MusicService.Models.Artist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ArtistTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CoverFileId")
                        .HasColumnType("uuid");

                    b.Property<string>("CoverUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ArtistTypeId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.ArtistType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("ArtistTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8b3e0710-7088-49ff-a2f6-1398ad70a070"),
                            Name = "Band",
                            Slug = "band"
                        },
                        new
                        {
                            Id = new Guid("24b29830-dec4-47ca-8f8d-dc88c2833325"),
                            Name = "Musician",
                            Slug = "musician"
                        });
                });

            modelBuilder.Entity("Musdis.MusicService.Models.ArtistUser", b =>
                {
                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ArtistId", "UserId");

                    b.ToTable("ArtistUsers");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.Release", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CoverFileId")
                        .HasColumnType("uuid");

                    b.Property<string>("CoverUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ReleaseTypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ReleaseTypeId");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Releases");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.ReleaseArtist", b =>
                {
                    b.Property<Guid>("ReleaseId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uuid");

                    b.HasKey("ReleaseId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("ReleaseArtists");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.ReleaseType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("ReleaseTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e39e393b-b399-40df-a9b0-e367b402ec08"),
                            Name = "EP",
                            Slug = "ep"
                        },
                        new
                        {
                            Id = new Guid("58c68224-84b6-419c-90b3-c8163f70e2c6"),
                            Name = "Album",
                            Slug = "album"
                        },
                        new
                        {
                            Id = new Guid("8f0cdc1c-0d7d-457c-9e10-f8623343a92c"),
                            Name = "Single",
                            Slug = "single"
                        },
                        new
                        {
                            Id = new Guid("e600ecc8-d0c3-44fe-8d02-dd287d0c9a5e"),
                            Name = "Soundtrack",
                            Slug = "soundtrack"
                        },
                        new
                        {
                            Id = new Guid("41b08d67-cf66-4c7e-9bbe-edb88571c54a"),
                            Name = "Other",
                            Slug = "other"
                        });
                });

            modelBuilder.Entity("Musdis.MusicService.Models.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8a7275d3-9142-41e6-815d-9ed91d428fbe"),
                            Name = "Lo-Fi",
                            Slug = "lo-fi"
                        },
                        new
                        {
                            Id = new Guid("e7102cd5-efa8-4f06-ac5a-e60427d63c75"),
                            Name = "Shoegaze",
                            Slug = "shoegaze"
                        },
                        new
                        {
                            Id = new Guid("ea9a7166-dc82-477c-9ced-7382475c1510"),
                            Name = "Rock",
                            Slug = "rock"
                        },
                        new
                        {
                            Id = new Guid("614f9aac-825d-4319-b42b-ae94327df3f4"),
                            Name = "Pop",
                            Slug = "pop"
                        },
                        new
                        {
                            Id = new Guid("c2bae778-33a2-442a-927d-3616211402d8"),
                            Name = "Electronic",
                            Slug = "Electronic"
                        });
                });

            modelBuilder.Entity("Musdis.MusicService.Models.TagTrack", b =>
                {
                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TrackId")
                        .HasColumnType("uuid");

                    b.HasKey("TagId", "TrackId");

                    b.HasIndex("TrackId");

                    b.ToTable("TagTracks");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AudioFileId")
                        .HasColumnType("uuid");

                    b.Property<string>("AudioUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ReleaseId")
                        .HasColumnType("uuid");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ReleaseId");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.TrackArtist", b =>
                {
                    b.Property<Guid>("TrackId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ArtistId")
                        .HasColumnType("uuid");

                    b.HasKey("TrackId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("TrackArtists");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.Artist", b =>
                {
                    b.HasOne("Musdis.MusicService.Models.ArtistType", "ArtistType")
                        .WithMany("Artists")
                        .HasForeignKey("ArtistTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArtistType");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.ArtistUser", b =>
                {
                    b.HasOne("Musdis.MusicService.Models.Artist", "Artist")
                        .WithMany("ArtistUsers")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.Release", b =>
                {
                    b.HasOne("Musdis.MusicService.Models.ReleaseType", "ReleaseType")
                        .WithMany("Releases")
                        .HasForeignKey("ReleaseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReleaseType");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.ReleaseArtist", b =>
                {
                    b.HasOne("Musdis.MusicService.Models.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Musdis.MusicService.Models.Release", "Release")
                        .WithMany()
                        .HasForeignKey("ReleaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Release");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.TagTrack", b =>
                {
                    b.HasOne("Musdis.MusicService.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Musdis.MusicService.Models.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.Track", b =>
                {
                    b.HasOne("Musdis.MusicService.Models.Release", "Release")
                        .WithMany("Tracks")
                        .HasForeignKey("ReleaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Release");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.TrackArtist", b =>
                {
                    b.HasOne("Musdis.MusicService.Models.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Musdis.MusicService.Models.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.Artist", b =>
                {
                    b.Navigation("ArtistUsers");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.ArtistType", b =>
                {
                    b.Navigation("Artists");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.Release", b =>
                {
                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("Musdis.MusicService.Models.ReleaseType", b =>
                {
                    b.Navigation("Releases");
                });
#pragma warning restore 612, 618
        }
    }
}
